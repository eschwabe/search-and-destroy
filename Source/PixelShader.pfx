/*******************************************************************************
* Game Development Project
* Pixel Shader
*
* Eric Schwabe
* 2010-02-13
*
*******************************************************************************/

/**
* CONSTANTS
*/
float4 vLightColor      : register(c0);	// light color
float4 vLightDirection  : register(c1);	// diffuse light direction
float4 vAmbientColor    : register(c2); // ambient color

sampler tex             : register(s0);

/**
* INPUT
*/
struct PS_INPUT
{
    float2 texCoords	: TEXCOORD0;	// texture coordinates
    float3 worldNormal	: TEXCOORD1;    // world normal
    float4 diffuse		: COLOR0;		// diffuse color
    float4 specular		: COLOR1;		// specular color
};

/**
* OUTPUT
*/
struct PS_OUTPUT
{
    float4 color		: COLOR;
};

/**
* MAIN
*/
void main(PS_INPUT input, out PS_OUTPUT output)
{
    // normalize vector
    float3 vLight = normalize(vLightDirection.xyz);
    float3 vNormal = normalize(input.worldNormal);

    // lambert (diffuse*L.N)
    // ensure positive value
    float ldn = max( dot(vLight,vNormal), 0.0 );

    // compute colors
    float4 diffuse = tex2D(tex, input.texCoords);
    output.color = diffuse * (ldn * vLightColor + vAmbientColor);
}
